class CA_DurationSpin extends HTMLElement{static get is(){return"ca-duration-spin"}static get observedAttributes(){return["value"]}hms(value){var seconds=value%60;var minutes=Math.floor(value/60)%60;var hours=Math.floor(value/3600);seconds=Math.floor(seconds);return(hours+":"+minutes+":"+seconds).replace(/\d+/g,m=>"0".substr(m.length-1)+m).replace(/^00:/,"")}display(){this.input.value=this.hms(this.number);this.input.setAttribute("size",this.input.value.length)}onMinus(){this.number=Math.max(this.min,this.number-this.step);this.display();this.onChange()}onPlus(){this.number=Math.min(this.max,this.number+this.step);this.display();this.onChange()}holdMinus(){this.clearHold();this.onMinus(this);this._interval=setInterval(this.onMinus.bind(this),this.repeat_rate)}holdPlus(){this.clearHold();this.onPlus(this);this._interval=setInterval(this.onPlus.bind(this),this.repeat_rate)}clearHold(){clearInterval(this._interval)}onChange(){this.setAttribute("value",this.number)}template(){return`<style>input{min-width:5ch}button{cursor:pointer}</style><button>${this.labels.minus}</button><input type='text' value='00:00' size='5' readonly><button>${this.labels.plus}</button>`}attrib(name){return this.attributes[name]?this.attributes[name].value:""}render(){this.shadow.innerHTML=this.template()}connectedCallback(){if(this.attrib("minus").length)this.labels.minus=this.attrib("minus");if(this.attrib("plus").length)this.labels.plus=this.attrib("plus");this.render();this.minus=this.shadow.querySelector("button:first-of-type");this.plus=this.shadow.querySelector("button:last-of-type");this.input=this.shadow.querySelector("input");this.min=Math.max(0,~~this.attrib("min"));this.number=Math.max(this.min,~~this.attrib("value"));this.step=Math.max(1,~~this.attrib("step"));this.max=Math.min(86400,Math.max(this.min+this.step,~~this.attrib("max")));this.minus.addEventListener("click",this.clearHold.bind(this));this.minus.addEventListener("mousedown",this.holdMinus.bind(this));this.minus.addEventListener("mouseup",this.clearHold.bind(this));this.plus.addEventListener("click",this.clearHold.bind(this));this.plus.addEventListener("mousedown",this.holdPlus.bind(this));this.plus.addEventListener("mouseup",this.clearHold.bind(this));this.input.addEventListener("change",this.onChange.bind(this));this.shadow.addEventListener("mouseout",this.clearHold.bind(this));this.display()}disconnectedCallback(){this.minus.removeEventListener("click",this.clearHold.bind(this));this.minus.removeEventListener("mousedown",this.holdMinus.bind);this.minus.removeEventListener("mouseup",this.clearHold.bind);this.plus.removeEventListener("click",this.clearHold.bind(this));this.plus.removeEventListener("mousedown",this.holdPlus.bind);this.plus.removeEventListener("mouseup",this.clearHold.bind);this.input.removeEventListener("change",this.onChange.bind);this.shadow.removeEventListener("mouseout",this.clearHold.bind(this))}constructor(){super();this.shadow=this.attachShadow({mode:"open"});this.repeat_rate=175;this.labels={minus:"-",plus:"+"}}}customElements.define(CA_DurationSpin.is,CA_DurationSpin);